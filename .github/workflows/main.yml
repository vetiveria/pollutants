name: Toxic Releases Project

on: [ push ]

jobs:
    build:

        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.7]

        steps:
            -   uses: actions/checkout@v1
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v1
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt

            -   name: Lint with flake8
                run: |
                    pip install flake8
                    printf "\n"
                    echo "============================= flake8 session starts =============================="
                    printf "\n"
                    # Stop the build if there are Python syntax errors or undefined names.
                    # Exit-zero treats all errors as warnings.
                    # The GitHub editor is 127 chars wide.

                    printf "\n"
                    echo "Issues in relation to logic (F7), syntax (Python E9, Flake F7), mathematical
                    formulae symbols (F63), undefined variable names (F82):"
                    echo "toxicants/algorithms"
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics toxicants/algorithms
                    echo "toxicants/io"
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics toxicants/io
                    echo "toxicants/src"
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics toxicants/src

                    printf "\n"
                    echo "Complexity issues:"
                    echo "toxicants/algorithms"
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics toxicants/algorithms
                    echo "toxicants/io"
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics toxicants/io
                    echo "toxicants/src"
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics toxicants/src

            -   name: Lint with pylint
                run: |
                    pip install pylint
                    printf "\n"
                    echo "============================= pylint session starts =============================="
                    printf "\n"
                    pylint --rcfile .pylintrc toxicants/algorithms
                    pylint --rcfile .pylintrc toxicants/io
                    pylint --rcfile .pylintrc toxicants/src
                    pylint --rcfile .pylintrc toxicants/main.py

            -   name: Test with pytest
                run: |
                    pip install pytest
                    pytest -o python_files=test_*.py

            -   name: Coverage with pytest-cov
                run: |
                    pip install coverage
                    pip install pytest-cov
                    pytest --cov toxicants/io tests/io