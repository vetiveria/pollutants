name: Toxic Releases Project

on: [ push ]

jobs:
    build:

        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.7]

        steps:
            -   uses: actions/checkout@v1
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v1
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt

            -   name: Lint with flake8
                run: |
                    pip install flake8
                    printf "\n"
                    echo "============================= flake8 session starts =============================="
                    printf "\n"
                    # Stop the build if there are Python syntax errors or undefined names.
                    # Exit-zero treats all errors as warnings.
                    # The GitHub editor is 127 chars wide.
                    printf "\n"
                    echo "LOGIC"
                    echo "Issues in relation to logic (F7), syntax (Python E9, Flake F7), mathematical
                    formulae symbols (F63), undefined variable names (F82)"
                    printf "\npollutants/algorithms ->\n"
                    printf "instances.py: "
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pollutants/algorithms/instances.py
                    printf "\npollutants/io ->\n"
                    printf "arguments.py: "
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pollutants/io/arguments.py
                    printf "directories.py: "
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pollutants/io/directories.py
                    printf "\npollutants/src ->\n"
                    printf "readdata.py: "
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pollutants/src/readdata.py
                    printf "readschema.py: "
                    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pollutants/src/readschema.py
                    printf "\n\n\n"
                    echo "COMPLEXITY"
                    printf "\npollutants/algorithms ->\n"
                    printf "instances.py: "
                    python -m flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics pollutants/algorithms/instances.py
                    printf "\npollutants/io ->\n"
                    printf "arguments.py: "
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics pollutants/io/arguments.py
                    printf "directories.py: "
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics pollutants/io/directories.py
                    printf "\npollutants/src ->\n"
                    printf "readdata.py: "
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics pollutants/src/readdata.py
                    printf "readschema.py: "
                    flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics pollutants/src/readschema.py

            -   name: Lint with pylint
                run: |
                    pip install pylint
                    printf "\n"
                    echo "============================= pylint session starts =============================="
                    printf "\n"
                    printf "\nSECTION: pollutants/algorithms/\n\n"
                    printf "pollutants/algorithms/instances.py"
                    pylint --rcfile .pylintrc pollutants/algorithms/instances.py
                    printf "\nSECTION: pollutants/io/\n\n"
                    printf "pollutants/io/arguments.py"
                    pylint --rcfile .pylintrc pollutants/io/arguments.py
                    printf "pollutants/io/directories.py"
                    pylint --rcfile .pylintrc pollutants/io/directories.py
                    printf "\nSECTION: pollutants/src/\n\n"
                    printf "pollutants/src/readdata.py"
                    pylint --rcfile .pylintrc pollutants/src/readdata.py
                    printf "pollutants/src/readschema.py"
                    pylint --rcfile .pylintrc pollutants/src/readschema.py
                    printf "\nSECTION: pollutants/main.py"
                    pylint --rcfile .pylintrc pollutants/main.py

            -   name: Test with pytest
                run: |
                    pip install pytest
                    pytest -o python_files=test_*.py

            -   name: Coverage with pytest-cov
                run: |
                    pip install coverage
                    pip install pytest-cov
                    pytest --cov pollutants/io tests/io